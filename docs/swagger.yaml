basePath: /
definitions:
  model.UserRequest:
    properties:
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.UserResponse:
    properties:
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  service.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  token.CreateTokenPayload:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  token.CreateTokenResponse:
    properties:
      token:
        type: string
    type: object
info:
  contact:
    email: ingleantula@gmail.com
    name: API Support
    url: http://www.swagger.io/support
  description: debts api.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: debs API
  version: "1.0"
paths:
  /ping:
    get:
      description: ping operation
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: ping verify if app is running
      tags:
      - ping
  /v1/token:
    post:
      consumes:
      - application/json
      description: It generates a token
      parameters:
      - description: Token Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/token.CreateTokenPayload'
      produces:
      - application/json
      responses:
        "201":
          description: User token
          schema:
            $ref: '#/definitions/token.CreateTokenResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Generates a token for an existing and active user
      tags:
      - Create User's token
  /v1/users:
    patch:
      description: Activate a user
      parameters:
      - description: Client's token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.ErrorResponse'
      summary: Activate an user chaning status to activate = true
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Add a new User in disable state
      parameters:
      - description: User Request Body
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User Created
          schema:
            $ref: '#/definitions/model.UserResponse'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Register User and try to send and invitation
      tags:
      - user
schemes:
- http
swagger: "2.0"
